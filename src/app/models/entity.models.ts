export type EntityContentType = 'card' | 'hero' | 'tile';

interface EntityBase {
  id: string;
  dbfId: number;
  name: string;
  text?: string;
  flavor?: string;
  artist?: string;
  collectible?: boolean;
  rarity?: CardRarity;
  set: CardSet;
  cardClass?: CardClass;
  elite?: boolean;

  type: CardType.HERO | CardType.MINION | CardType.SPELL | CardType.WEAPON;

  mechanics?: Mechanics[];
  referencedTags?: Mechanics[];
  playRequirements?: Record<string, number>;
  targetingArrowText?: string;
}

export type Entity = Hero | Card;

export type Card = Minion | Spell | Weapon;

export interface Hero extends EntityBase {
  type: CardType.HERO;
  health: number;
  armor?: number;
  race?: string;
}

export interface Minion extends EntityBase {
  type: CardType.MINION;
  cost: number;
  attack: number;
  health: number;
  race?: string;
}

export interface Spell extends EntityBase {
  type: CardType.SPELL;
  cost: number;
}

export interface Weapon extends EntityBase {
  type: CardType.WEAPON;
  cost: number;
  attack: number;
  durability: number;
}

export enum CardRarity {
  FREE = 'FREE',
  COMMON = 'COMMON',
  RARE = 'RARE',
  EPIC = 'EPIC',
  LEGENDARY = 'LEGENDARY',
}

export enum CardSet {
  CORE = 'CORE',
  EXPERT1 = 'EXPERT1',
  NAXX = 'NAXX',
  GVG = 'GVG',
}

export enum CardType {
  HERO = 'HERO',
  MINION = 'MINION',
  SPELL = 'SPELL',
  ENCHANTMENT = 'ENCHANTMENT',
  WEAPON = 'WEAPON',
  HERO_POWER = 'HERO_POWER',
}

export enum CardClass {
  DRUID = 'DRUID',
  HUNTER = 'HUNTER',
  MAGE = 'MAGE',
  PALADIN = 'PALADIN',
  PRIEST = 'PRIEST',
  ROGUE = 'ROGUE',
  SHAMAN = 'SHAMAN',
  WARLOCK = 'WARLOCK',
  WARRIOR = 'WARRIOR',
  NEUTRAL = 'NEUTRAL',
}

export const enum Zone {
  INVALID = 'INVALID',
  PLAY = 'PLAY',
  DECK = 'DECK',
  HAND = 'HAND',
  GRAVEYARD = 'GRAVEYARD',
  REMOVEDFROMGAME = 'REMOVEDFROMGAME',
  SETASIDE = 'SETASIDE',
  SECRET = 'SECRET',
}

export enum CardRace {
  BEAST = 'BEAST',
  DRAGON = 'DRAGON',
  PIRATE = 'PIRATE',
  ELEMENTAL = 'ELEMENTAL',
  MECHANICAL = 'MECHANICAL',
  DEMON = 'DEMON',
  MURLOC = 'MURLOC',
}

export const enum Mechanics {
  ADJACENT_BUFF = 'ADJACENT_BUFF',
  AI_MUST_PLAY = 'AI_MUST_PLAY',
  APPEAR_FUNCTIONALLY_DEAD = 'APPEAR_FUNCTIONALLY_DEAD',
  ADAPT = 'ADAPT',
  AURA = 'AURA',
  BATTLECRY = 'BATTLECRY',
  CANT_ATTACK = 'CANT_ATTACK',
  CANT_BE_TARGETED_BY_ABILITIES = 'CANT_BE_TARGETED_BY_ABILITIES',
  CANT_BE_TARGETED_BY_HERO_POWERS = 'CANT_BE_TARGETED_BY_HERO_POWERS',
  CHARGE = 'CHARGE',
  CHOOSE_ONE = 'CHOOSE_ONE',
  COMBO = 'COMBO',
  COUNTER = 'COUNTER',
  DEATHRATTLE = 'DEATHRATTLE',
  DISCOVER = 'DISCOVER',
  DIVINE_SHIELD = 'DIVINE_SHIELD',
  ENRAGED = 'ENRAGED',
  EVIL_GLOW = 'EVIL_GLOW',
  FORGETFUL = 'FORGETFUL',
  FREEZE = 'FREEZE',
  IMMUNE = 'IMMUNE',
  INSPIRE = 'INSPIRE',
  JADE_GOLEM = 'JADE_GOLEM',
  MORPH = 'MORPH',
  POISONOUS = 'POISONOUS',
  QUEST = 'QUEST',
  RECEIVES_DOUBLE_SPELLDAMAGE_BONUS = 'RECEIVES_DOUBLE_SPELLDAMAGE_BONUS',
  RITUAL = 'RITUAL',
  SECRET = 'SECRET',
  SILENCE = 'SILENCE',
  STEALTH = 'STEALTH',
  TAG_ONE_TURN_EFFECT = 'TAG_ONE_TURN_EFFECT',
  TAUNT = 'TAUNT',
  TOPDECK = 'TOPDECK',
  UNTOUCHABLE = 'UNTOUCHABLE',
  WINDFURY = 'WINDFURY',
  ImmuneToSpellpower = 'ImmuneToSpellpower',
  InvisibleDeathrattle = 'InvisibleDeathrattle',
}

export const enum PlayRequirement {
  INVALID = 'INVALID',
  REQ_MINION_TARGET = 'REQ_MINION_TARGET',
  REQ_FRIENDLY_TARGET = 'REQ_FRIENDLY_TARGET',
  REQ_ENEMY_TARGET = 'REQ_ENEMY_TARGET',
  REQ_DAMAGED_TARGET = 'REQ_DAMAGED_TARGET',
  REQ_MAX_SECRETS = 'REQ_MAX_SECRETS',
  REQ_ENCHANTED_TARGET = 'REQ_ENCHANTED_TARGET',
  REQ_FROZEN_TARGET = 'REQ_FROZEN_TARGET',
  REQ_CHARGE_TARGET = 'REQ_CHARGE_TARGET',
  REQ_TARGET_MAX_ATTACK = 'REQ_TARGET_MAX_ATTACK',
  REQ_NONSELF_TARGET = 'REQ_NONSELF_TARGET',
  REQ_TARGET_WITH_RACE = 'REQ_TARGET_WITH_RACE',
  REQ_TARGET_TO_PLAY = 'REQ_TARGET_TO_PLAY',
  REQ_NUM_MINION_SLOTS = 'REQ_NUM_MINION_SLOTS',
  REQ_WEAPON_EQUIPPED = 'REQ_WEAPON_EQUIPPED',
  REQ_ENOUGH_MANA = 'REQ_ENOUGH_MANA',
  REQ_YOUR_TURN = 'REQ_YOUR_TURN',
  REQ_NONSTEALTH_ENEMY_TARGET = 'REQ_NONSTEALTH_ENEMY_TARGET',
  REQ_HERO_TARGET = 'REQ_HERO_TARGET',
  REQ_SECRET_ZONE_CAP = 'REQ_SECRET_ZONE_CAP',
  REQ_SECRET_CAP = 'REQ_SECRET_CAP',
  REQ_MINION_CAP_IF_TARGET_AVAILABLE = 'REQ_MINION_CAP_IF_TARGET_AVAILABLE',
  REQ_MINION_CAP = 'REQ_MINION_CAP',
  REQ_TARGET_ATTACKED_THIS_TURN = 'REQ_TARGET_ATTACKED_THIS_TURN',
  REQ_TARGET_IF_AVAILABLE = 'REQ_TARGET_IF_AVAILABLE',
  REQ_MINIMUM_ENEMY_MINIONS = 'REQ_MINIMUM_ENEMY_MINIONS',
  REQ_TARGET_FOR_COMBO = 'REQ_TARGET_FOR_COMBO',
  REQ_NOT_EXHAUSTED_ACTIVATE = 'REQ_NOT_EXHAUSTED_ACTIVATE',
  REQ_UNIQUE_SECRET_OR_QUEST = 'REQ_UNIQUE_SECRET_OR_QUEST',
  REQ_UNIQUE_SECRET = 'REQ_UNIQUE_SECRET',
  REQ_TARGET_TAUNTER = 'REQ_TARGET_TAUNTER',
  REQ_CAN_BE_ATTACKED = 'REQ_CAN_BE_ATTACKED',
  REQ_ACTION_PWR_IS_MASTER_PWR = 'REQ_ACTION_PWR_IS_MASTER_PWR',
  REQ_TARGET_MAGNET = 'REQ_TARGET_MAGNET',
  REQ_ATTACK_GREATER_THAN_0 = 'REQ_ATTACK_GREATER_THAN_0',
  REQ_ATTACKER_NOT_FROZEN = 'REQ_ATTACKER_NOT_FROZEN',
  REQ_HERO_OR_MINION_TARGET = 'REQ_HERO_OR_MINION_TARGET',
  REQ_CAN_BE_TARGETED_BY_SPELLS = 'REQ_CAN_BE_TARGETED_BY_SPELLS',
  REQ_SUBCARD_IS_PLAYABLE = 'REQ_SUBCARD_IS_PLAYABLE',
  REQ_TARGET_FOR_NO_COMBO = 'REQ_TARGET_FOR_NO_COMBO',
  REQ_NOT_MINION_JUST_PLAYED = 'REQ_NOT_MINION_JUST_PLAYED',
  REQ_NOT_EXHAUSTED_HERO_POWER = 'REQ_NOT_EXHAUSTED_HERO_POWER',
  REQ_CAN_BE_TARGETED_BY_OPPONENTS = 'REQ_CAN_BE_TARGETED_BY_OPPONENTS',
  REQ_ATTACKER_CAN_ATTACK = 'REQ_ATTACKER_CAN_ATTACK',
  REQ_TARGET_MIN_ATTACK = 'REQ_TARGET_MIN_ATTACK',
  REQ_CAN_BE_TARGETED_BY_HERO_POWERS = 'REQ_CAN_BE_TARGETED_BY_HERO_POWERS',
  REQ_ENEMY_TARGET_NOT_IMMUNE = 'REQ_ENEMY_TARGET_NOT_IMMUNE',
  REQ_ENTIRE_ENTOURAGE_NOT_IN_PLAY = 'REQ_ENTIRE_ENTOURAGE_NOT_IN_PLAY',
  REQ_MINIMUM_TOTAL_MINIONS = 'REQ_MINIMUM_TOTAL_MINIONS',
  REQ_MUST_TARGET_TAUNTER = 'REQ_MUST_TARGET_TAUNTER',
  REQ_UNDAMAGED_TARGET = 'REQ_UNDAMAGED_TARGET',
  REQ_CAN_BE_TARGETED_BY_BATTLECRIES = 'REQ_CAN_BE_TARGETED_BY_BATTLECRIES',
  REQ_STEADY_SHOT = 'REQ_STEADY_SHOT',
  REQ_MINION_OR_ENEMY_HERO = 'REQ_MINION_OR_ENEMY_HERO',
  REQ_TARGET_IF_AVAILABLE_AND_DRAGON_IN_HAND = 'REQ_TARGET_IF_AVAILABLE_AND_DRAGON_IN_HAND',
  REQ_LEGENDARY_TARGET = 'REQ_LEGENDARY_TARGET',
  REQ_FRIENDLY_MINION_DIED_THIS_TURN = 'REQ_FRIENDLY_MINION_DIED_THIS_TURN',
  REQ_FRIENDLY_MINION_DIED_THIS_GAME = 'REQ_FRIENDLY_MINION_DIED_THIS_GAME',
  REQ_ENEMY_WEAPON_EQUIPPED = 'REQ_ENEMY_WEAPON_EQUIPPED',
  REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_MINIONS = 'REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_MINIONS',
  REQ_TARGET_WITH_BATTLECRY = 'REQ_TARGET_WITH_BATTLECRY',
  REQ_TARGET_WITH_DEATHRATTLE = 'REQ_TARGET_WITH_DEATHRATTLE',
  REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_SECRETS = 'REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_FRIENDLY_SECRETS',
  REQ_SECRET_ZONE_CAP_FOR_NON_SECRET = 'REQ_SECRET_ZONE_CAP_FOR_NON_SECRET',
  REQ_SECRET_CAP_FOR_NON_SECRET = 'REQ_SECRET_CAP_FOR_NON_SECRET',
  REQ_TARGET_EXACT_COST = 'REQ_TARGET_EXACT_COST',
  REQ_STEALTHED_TARGET = 'REQ_STEALTHED_TARGET',
  REQ_MINION_SLOT_OR_MANA_CRYSTAL_SLOT = 'REQ_MINION_SLOT_OR_MANA_CRYSTAL_SLOT',
  REQ_MAX_QUESTS = 'REQ_MAX_QUESTS',
  REQ_TARGET_IF_AVAILABE_AND_ELEMENTAL_PLAYED_LAST_TURN = 'REQ_TARGET_IF_AVAILABE_AND_ELEMENTAL_PLAYED_LAST_TURN',
  REQ_TARGET_NOT_VAMPIRE = 'REQ_TARGET_NOT_VAMPIRE',
  REQ_TARGET_NOT_DAMAGEABLE_ONLY_BY_WEAPONS = 'REQ_TARGET_NOT_DAMAGEABLE_ONLY_BY_WEAPONS',
  REQ_NOT_DISABLED_HERO_POWER = 'REQ_NOT_DISABLED_HERO_POWER',
  REQ_MUST_PLAY_OTHER_CARD_FIRST = 'REQ_MUST_PLAY_OTHER_CARD_FIRST',
  REQ_HAND_NOT_FULL = 'REQ_HAND_NOT_FULL',
  REQ_TARGET_IF_AVAILABLE_AND_NO_3_COST_CARD_IN_DECK = 'REQ_TARGET_IF_AVAILABLE_AND_NO_3_COST_CARD_IN_DECK',
  REQ_CAN_BE_TARGETED_BY_COMBOS = 'REQ_CAN_BE_TARGETED_BY_COMBOS',
  REQ_CANNOT_PLAY_THIS = 'REQ_CANNOT_PLAY_THIS',
  REQ_FRIENDLY_MINIONS_OF_RACE_DIED_THIS_GAME = 'REQ_FRIENDLY_MINIONS_OF_RACE_DIED_THIS_GAME',
  REQ_DRAG_TO_PLAY_PRE29933 = 'REQ_DRAG_TO_PLAY_PRE29933',
  REQ_OPPONENT_PLAYED_CARDS_THIS_GAME = 'REQ_OPPONENT_PLAYED_CARDS_THIS_GAME',
  REQ_LITERALLY_UNPLAYABLE = 'REQ_LITERALLY_UNPLAYABLE',
  REQ_TARGET_IF_AVAILABLE_AND_HERO_HAS_ATTACK = 'REQ_TARGET_IF_AVAILABLE_AND_HERO_HAS_ATTACK',
  REQ_FRIENDLY_MINION_OF_RACE_DIED_THIS_TURN = 'REQ_FRIENDLY_MINION_OF_RACE_DIED_THIS_TURN',
  REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_SPELLS_PLAYED_THIS_TURN = 'REQ_TARGET_IF_AVAILABLE_AND_MINIMUM_SPELLS_PLAYED_THIS_TURN',
  REQ_FRIENDLY_MINION_OF_RACE_IN_HAND = 'REQ_FRIENDLY_MINION_OF_RACE_IN_HAND',
  REQ_DRAG_TO_PLAY = 'REQ_DRAG_TO_PLAY',
  REQ_FRIENDLY_DEATHRATTLE_MINION_DIED_THIS_GAME = 'REQ_FRIENDLY_DEATHRATTLE_MINION_DIED_THIS_GAME',
}
